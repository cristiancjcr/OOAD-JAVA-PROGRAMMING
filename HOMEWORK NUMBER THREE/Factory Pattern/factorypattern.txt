'Factory Pattern' este un design pattern creational.
Pattern-urile creational sunt folosite pentru a rezolva probleme legate de crearea de obiecte. 
În loc să se creeze obiecte direct folosind operatorul new, aceste pattern-uri oferă o modalitate de a crea obiecte într-un mod flexibil, fără a expune detaliile exacte de instanțiere.



'Factory Pattern' este recomandat să fie folosit în următoarele situații :



Crearea de obiecte complexe : 
Când crearea unui obiect implică mai mulți pași sau necesită parametri complexi, Factory Pattern ajută la centralizarea logicii de instanțiere, făcând codul client mai curat.



Când nu știm ce obiecte trebuie create la compilare : 
Dacă tipul obiectelor depinde de condiții externe (ex. configurație, input utilizator), Factory Pattern ajută să decidă tipul corect de obiect la rulare, fără ca clientul să știe exact ce clase concrete sunt folosite.



Extensibilitate : 
Când vrei să adaugi noi tipuri de obiecte fără să modifici codul existent al clientului. Factory Pattern decuplează crearea obiectelor, permițând adăugarea ușoară a unor noi clase fără schimbarea codului client.



În cazul ierarhiilor de clase : 
Dacă ai o ierarhie de clase și vrei să creezi obiecte ale unor clase derivată fără ca utilizatorul să știe exact ce clasă se folosește, un Factory poate gestiona acest proces.



În concluzie, este util în scenarii unde există mai multe tipuri de obiecte, iar instanțierea acestora poate fi flexibilă și centralizată într-un loc.
